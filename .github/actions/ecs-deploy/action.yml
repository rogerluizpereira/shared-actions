name: "ECR Deploy"
description: "Deploy a Docker images from Amazon ECR to ECS"
inputs:
  aws-access-key-id:
    description: "AWS Access Key ID"
    required: true
  aws-secret-access-key:
    description: "AWS Secret Access Key"
    required: true
  aws-session-token:
    description: "AWS temporary token"
    required: false
  aws-account:
    description: "AWS Account"
    required: true    
  aws-region:
    description: "AWS Region"
    required: true
  repository-name:
    description: "ECR Repository Name"
    required: true
  image-tag:
    description: "Tag for the Docker image"
    required: false
    default: "latest"

runs:
  using: "composite"

  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-session-token: ${{ inputs.aws-session-token }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Pull the image from ECR
      shell: bash
      run: |
        docker pull ${{ inputs.aws-account }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/${{ inputs.repository-name }}:${{ github.event.inputs.branch}}

    - name: "Push Retagged Docker Image to ECR"
      shell: bash
      run: |
        ECR_URI="${{ inputs.aws-account }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/${{ inputs.repository-name }}"
        docker tag ${{ inputs.repository-name }} $ECR_URI:${{ inputs.image-tag }}
        docker push --all-tags $ECR_URI